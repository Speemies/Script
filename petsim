repeat
    task.wait(20)
until game:IsLoaded()

getgenv().Settings = {
    ["Performance"] = {
        ["FPS Cap"] = 12,
        ["Disable Rendering"] = false,
        ["Downgraded Quality"] = true
    }
}

local PERF = Settings["Performance"]

do
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(215.41065979003906, 27.29422378540039, -587.291015625)
    setfpscap(PERF["FPS Cap"] or 15)
    game:GetService("RunService"):Set3dRenderingEnabled(not PERF["Disable Rendering"])
    if PERF["Downgraded Quality"] then
        local lighting = game.Lighting
        lighting.GlobalShadows = false
        lighting.FogStart = 0
        lighting.FogEnd = 0
        lighting.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"

        for _,v in pairs(game:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            end
        end

        for _,e in pairs(lighting:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end

    local a = game.Players.LocalPlayer.Character.HumanoidRootPart
    local b = workspace.__THINGS
    local s = "Small"
    local d = "Diamond Bag"


    local function get()
        local cf = a.CFrame
        for i,v in pairs(b.Lootbags:GetChildren()) do
        v:PivotTo(cf)
        end
        for i,v in pairs(b.Orbs:GetChildren()) do
        v:PivotTo(cf)

        end
    end


    while task.wait(0.5) do
    get()
    end
end
